/* Simple workflow language. */

ApplangModel:
    (
        (config=Config)|
        (entities*=Entity)
    )+
;

Config:
    'config' '{'
        'app_name' '=' app_name=ID ';'
        ('app_label' '=' app_label=STRING ';')?
        'namespace' '=' namespace=QNAME ';'
        'db_version' '=' db_version=INT ';'
        'start_screen' '=' start_screen=[Entity] ';'
        'platforms' '=' platforms=Platforms ';'
        (android_specs=AndroidSpecs)?

    '}'
;

Platforms:
    ((android?='android') | (ios?='ios') | (windows_phone?='windows_phone'))+[',']
;

AndroidSpecs:
    'android_specs' '=' '{'
        (   ('sdk_path' '=' sdk_path=STRING ';')
            |('min_version' '=' min_version=INT ';')
            |('target_version' '=' target_version=INT ';')
        )*
    '}'
;

Entity:
    'entity' name=FIRST_UPPER_ID
    ('('label=STRING')')?
    '{'
        attributes+=Attribute
    '}'
;

Attribute:
    name=ID ('('label=STRING')')?
    ':' ((primitive_type=PrimitiveType)|(reference_type=[Entity]))
    //Descriptors
    (
    '('
         ( (required?='required')
           |(unique?='unique')
           |(transient?='transient')
           |(exclude_from_list?='excludeFromList')
           |(to_string?='toString')
           |(readonly?='readonly')
           |(searchable?='searchable')
           |(view_from_container?='viewFromContainer')
         )*[',']
    ')'
    )?
    ';'
;

PrimitiveType:
    'int'|'string'|'numeric_string'|'textarea_string'|'float'|'bool'|'date'|'image'|'telephone_type'|'address_type'
;

/*
INT_TYPE:
    name='int'
;

STRING_TYPE:
    name='string'
;

NUMERIC_STRING_TYPE:
    name='numeric_string'
;

TEXTAREA_STRING_TYPE:
    name='textarea_string'
;

FLOAT_TYPE:
    name='float'
;

BOOL_TYPE:
    name='bool'
;

DATE_TYPE:
    name='date'
;

IMAGE_TYPE:
    name='image'
;

TELEPHONE_TYPE:
    name='telephone_type'
;

ADDRESS_TYPE:
    name='address_type'
;
*/

/*
Workflow:

  'workflow' name=ID (desc=STRING)?
  'init' init=[Task]

  tasks *= Task

  actions *= Action

;

Task:
  'task' name=ID '{'
    (('entry' entry=[Action])|
    ('leave' leave=[Action])|
    ('next' next+=[Task][',']))*
  '}'
;

Action:
  'action' name=ID
;
*/

QNAME:
    /([a-z_][a-z\d_]*\.)*[a-z_][a-z\d_]*/
;

FIRST_UPPER_ID:
    /([A-Z])([a-z]|[A-Z]|_|[0-9])*/
;

Comment:
  /\/\/.*$/
;

